[{"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\index.js":"1","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\reportWebVitals.js":"2","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\App.jsx":"3","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\home.jsx":"4","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\crear-texto\\crear-texto.jsx":"5","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\crear-texto\\components\\Letra.jsx":"6","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\create-flag.jsx":"7","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\part\\partState.jsx":"8","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\format\\formatState.jsx":"9","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\color\\colorState.jsx":"10","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\color\\colorContext.jsx":"11","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\part\\partContext.jsx":"12","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\format\\formatContext.jsx":"13","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\part\\partReducer.jsx":"14","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\format\\formatReducer.jsx":"15","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\color\\colorReducer.jsx":"16","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\types\\index.jsx":"17","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\test\\test.jsx":"18","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\components\\sidebar.jsx":"19","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\components\\flag.jsx":"20","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\components\\modal.jsx":"21","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\modal\\modalContext.jsx":"22","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\modal\\modalState.jsx":"23","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\modal\\modalReducer.jsx":"24"},{"size":500,"mtime":499162500000,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":1181,"mtime":1609384921519,"results":"28","hashOfConfig":"26"},{"size":465,"mtime":1609251635387,"results":"29","hashOfConfig":"26"},{"size":7840,"mtime":1609009405966,"results":"30","hashOfConfig":"26"},{"size":306,"mtime":1609008695038,"results":"31","hashOfConfig":"26"},{"size":8359,"mtime":1609384439818,"results":"32","hashOfConfig":"26"},{"size":3638,"mtime":1609217010323,"results":"33","hashOfConfig":"26"},{"size":3235,"mtime":1609223911339,"results":"34","hashOfConfig":"26"},{"size":6105,"mtime":1609208826501,"results":"35","hashOfConfig":"26"},{"size":109,"mtime":1609012273141,"results":"36","hashOfConfig":"26"},{"size":107,"mtime":1609099165242,"results":"37","hashOfConfig":"26"},{"size":113,"mtime":1609111723693,"results":"38","hashOfConfig":"26"},{"size":1219,"mtime":1609111549846,"results":"39","hashOfConfig":"26"},{"size":1343,"mtime":1609223026327,"results":"40","hashOfConfig":"26"},{"size":2523,"mtime":1609208891380,"results":"41","hashOfConfig":"26"},{"size":1307,"mtime":1609385490575,"results":"42","hashOfConfig":"26"},{"size":1922,"mtime":1609277360700,"results":"43","hashOfConfig":"26"},{"size":14859,"mtime":1609379410885,"results":"44","hashOfConfig":"26"},{"size":2369,"mtime":1609385612718,"results":"45","hashOfConfig":"26"},{"size":896,"mtime":1609385598916,"results":"46","hashOfConfig":"26"},{"size":109,"mtime":1609384683201,"results":"47","hashOfConfig":"26"},{"size":1167,"mtime":1609385662336,"results":"48","hashOfConfig":"26"},{"size":490,"mtime":1609385524008,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"f4rhg6",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\index.js",[],["108","109"],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\reportWebVitals.js",[],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\App.jsx",[],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\home.jsx",["110"],"import React, {Fragment, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Home() {\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>HOME</h1>\r\n      <ul>\r\n        <li><Link to={'/'}>Inicio</Link></li>\r\n        <li><Link to={'/crear-texto'}>Creat Texto</Link></li>\r\n        <li><Link to={'/create-flag'}>Crear bandera</Link></li>\r\n        <li><Link to={'/test'}>Test</Link></li>\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\crear-texto\\crear-texto.jsx",["111","112"],"import React, {Fragment, useState} from 'react';\r\nimport Letra from './components/Letra';\r\nimport {Global, css} from '@emotion/react';\r\nimport './crear-texto.scss'; \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faCircle,\r\n  faCheckCircle, \r\n  faSquare, \r\n  faCheckSquare, \r\n  faArrowCircleUp, \r\n  faArrowCircleDown\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { \r\n  faCircle as farCircle, \r\n  faCheckCircle as farCheckCircle,\r\n  faArrowAltCircleUp as farArrowUp\r\n} from '@fortawesome/free-regular-svg-icons';\r\n\r\nfunction CrearTexto() {\r\n\r\n  const [texto, setTexto] = useState('indesing');\r\n  const [colorElegido, setColorElegido] = useState('black');\r\n  const [forma, setForma] = useState('redondo');\r\n  const [animacion, setAnimacion] = useState(false);\r\n  const [bg, setBg] = useState(true);\r\n  const [borde, setBorde] = useState(true);\r\n  const [tipografia, setTipografia] = useState('serif');\r\n  const [menuColapsado, setMenuColapsado] = useState(true);\r\n  let letra = '';\r\n  let letras = texto.split('');\r\n  let formaElegida = '';\r\n\r\n  if(forma === 'cuadrado') {\r\n    formaElegida = '0';\r\n  } else {\r\n    formaElegida = '50%'\r\n  }\r\n\r\n  const modificarTexto = (e) => {\r\n    console.log('El texto ha sido modificado');\r\n    setTexto(e.target.value);\r\n  }\r\n\r\n  const cambiarColor = (e) => {\r\n    console.log(e.target.value);\r\n    setColorElegido(e.target.value);\r\n  }\r\n\r\n  const cambiarForma = (e) => {\r\n    console.log(\"La forma elegida ha cambiado a: \", e.target.value);\r\n    setForma(e.target.value);\r\n  }\r\n  \r\n  const modificarAnimacion = () => {\r\n    console.log(\"La animación elegida ha cambiado\");\r\n    if(animacion) {\r\n      setAnimacion(false);\r\n    } else {\r\n      setAnimacion(true);\r\n    }\r\n  }\r\n\r\n  const modificarBg = (e) => {\r\n    console.log(\"Se ha modificado el set de BG a: \", e.target.value)\r\n    if(bg) {\r\n      setBg(false);\r\n    } else {\r\n      setBg(true);\r\n    }\r\n  }\r\n\r\n  const modificarBorde = (e) => {\r\n    console.log(\"Se ha modificado el borde a: \", e.target.value)\r\n    if(borde) {\r\n      setBorde(false);\r\n    } else {\r\n      setBorde(true);\r\n    }\r\n  }\r\n\r\n  const modificarTipografia = (e) => {\r\n    console.log(\"Se ha modificado la tipografía a: \", e.target.value);\r\n    setTipografia(e.target.value);\r\n  }\r\n\r\n  const ocultarMenu = () => {\r\n    console.log('El menu se hace colapsado');\r\n    if(menuColapsado) {\r\n      setMenuColapsado(false);\r\n    } else {\r\n      setMenuColapsado(true);\r\n    }\r\n  }\r\n  \r\n  const submitFormulario = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const colores = ['black', 'grey', 'navy', 'aqua', 'orange', 'violet', 'teal', 'pink'];\r\n  const tipografias = ['serif', 'fantasy', 'cursive', 'Roboto', 'Helvetica'];\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n    <Global\r\n      styles={css`\r\n        .letra-wrapper .fondo {\r\n          background-color: ${bg ? colorElegido : 'transparent'};\r\n          border-color: ${borde ? colorElegido : 'transparent'};\r\n          border-radius: ${formaElegida};\r\n          animation: ${animacion ? 'spin 10s linear infinite' : 'none'};\r\n        }\r\n\r\n        .letra-wrapper .letra {\r\n          color: ${bg ? 'white' : colorElegido};\r\n          font-family: ${tipografia} !important;\r\n        }\r\n\r\n        .animacionBtn {\r\n          animation: ${animacion ? 'spin 5s linear infinite' : 'none'};\r\n        }\r\n\r\n        .formulario .form-group {\r\n          display: ${menuColapsado ? 'none' : 'flex'};\r\n        }\r\n\r\n      `}\r\n    />\r\n\r\n    \r\n      <form className=\"formulario\" onSubmit={submitFormulario}>\r\n\r\n        \r\n\r\n        <div className=\"forma-wrapper form-group\">\r\n\r\n          <p>Forma: </p>\r\n          <input \r\n            type=\"radio\" \r\n            name=\"forma\" \r\n            id=\"redondo\"\r\n            value=\"redondo\" \r\n            onChange={cambiarForma}\r\n          />\r\n          <label htmlFor=\"redondo\">\r\n            <FontAwesomeIcon \r\n              icon={forma==='redondo' ? faCheckCircle : faCircle}\r\n            />\r\n          </label>\r\n\r\n          <input \r\n            type=\"radio\" \r\n            name=\"forma\" \r\n            id=\"cuadrado\"\r\n            value=\"cuadrado\" \r\n            onChange={cambiarForma}\r\n          />\r\n          <label htmlFor=\"cuadrado\">\r\n            <FontAwesomeIcon \r\n              icon={forma==='cuadrado' ? faCheckSquare : faSquare}\r\n            />\r\n          </label>\r\n\r\n        </div>\r\n\r\n        <div className=\"animacion-wrapper form-group\">\r\n\r\n          <p>Animación: </p>\r\n          <input \r\n            type=\"radio\" \r\n            name=\"animacion\" \r\n            id=\"animacion\"\r\n            value=\"animacion\" \r\n            onClick={modificarAnimacion}\r\n          />\r\n          <label htmlFor=\"animacion\">\r\n            <FontAwesomeIcon \r\n              className=\"animacionBtn\"\r\n              icon={\r\n                animacion ? faCheckCircle :  faCircle\r\n              }\r\n            />\r\n          </label>\r\n\r\n        </div>\r\n\r\n        <div className=\"bg-wrapper form-group\">\r\n\r\n          <p>Fondo: </p>\r\n          <input \r\n            type=\"radio\" \r\n            name=\"bg\" \r\n            id=\"bg\"\r\n            value=\"true\" \r\n            onClick={modificarBg}\r\n          />\r\n          <label htmlFor=\"bg\">\r\n            <FontAwesomeIcon \r\n              icon={\r\n                bg ? faCircle :  farCircle\r\n              }\r\n            />\r\n          </label>\r\n\r\n        </div>\r\n\r\n        <div className=\"color-wrapper form-group\">\r\n          <p>Color: </p>\r\n\r\n          \r\n          {colores.map(color => (\r\n            \r\n            <div>\r\n              <input \r\n                type=\"radio\" \r\n                name=\"color\" \r\n                id={color}\r\n                value={color}\r\n                onChange={cambiarColor}\r\n              />\r\n              <label htmlFor={color}>\r\n                <FontAwesomeIcon \r\n                  icon={colorElegido===color ? faCheckCircle : faCircle}\r\n                  style={{color: color}}\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n          ))}\r\n\r\n        </div>\r\n\r\n        <div className=\"borde-wrapper form-group\">\r\n\r\n          <p>Borde: </p>\r\n          <input \r\n            type=\"radio\" \r\n            name=\"borde\" \r\n            id=\"borde\"\r\n            value=\"true\" \r\n            onClick={modificarBorde}\r\n          />\r\n          <label htmlFor=\"borde\">\r\n            <FontAwesomeIcon \r\n              icon={\r\n                borde ? farCheckCircle :  farCircle\r\n              }\r\n            />\r\n          </label>\r\n\r\n        </div>\r\n\r\n\r\n        <div className=\"font-wrapper form-group\">\r\n          \r\n          <p>Tipografía: </p>\r\n          <select \r\n            name=\"tipografia\" \r\n            id=\"tipografia\"\r\n            onChange={modificarTipografia}\r\n          >\r\n            {tipografias.map(tipografia => (\r\n            \r\n              <option \r\n                value={tipografia} \r\n                  style={{'font-family': tipografia}}\r\n              >{tipografia}\r\n              </option>\r\n             \r\n            ))}\r\n          </select>\r\n\r\n        </div>\r\n\r\n        <div className=\"btn-colapse\">\r\n          <FontAwesomeIcon \r\n            icon={\r\n              menuColapsado ? faArrowCircleDown : faArrowCircleUp\r\n            }\r\n            style={{'font-size': '2rem', cursor: 'pointer'}}\r\n            onClick={ocultarMenu}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"texto-wrapper\">\r\n          <input \r\n            type=\"text\" \r\n            value={texto}\r\n            id=\"tutexto\" \r\n            name=\"texto\"\r\n            onChange={modificarTexto}\r\n          />\r\n        </div>\r\n          \r\n\r\n\r\n      </form>\r\n\r\n\r\n    <div className=\"page-wrapper\">\r\n\r\n      {letras.map(letra => (\r\n            <Letra \r\n              key={letra}\r\n              letra={letra}\r\n            />\r\n          )\r\n      )}\r\n     \r\n    </div>\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default CrearTexto;\r\n","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\crear-texto\\components\\Letra.jsx",[],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\create-flag.jsx",["113","114","115","116","117","118"],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\part\\partState.jsx",["119","120"],"import React, {useReducer} from 'react';\r\nimport PartContext from './partContext';\r\nimport PartReducer from './partReducer';\r\n\r\nimport {   \r\n    UPDATE_PARTS_SELECTED_QUANTITY, \r\n    UPDATE_PARTS_QUANTITIES,\r\n    UPDATE_PARTS_IS_SUMMABLE,\r\n    UPDATE_PARTS_IS_REDUCIBLE,\r\n    ADD_PART,\r\n    REMOVE_PART\r\n} from '../../types';\r\n\r\nconst PartState = props => {\r\n\r\n    // Set de valores iniciales\r\n    const initialState = {\r\n        quantities: {\r\n            min: 2,\r\n            max: 8,\r\n            allowed: [2,3,4,5,6,7,8],\r\n            isSummable: true,\r\n            isReducible: true,\r\n            selected: 3,\r\n            isModifiable: true\r\n        },\r\n        colors: [\r\n            {\"name\": \"--first-color\",\"_id\": 1, \"_value\": \"#b57373\", \"type\": \"general\"},\r\n            {\"name\": \"--second-color\",\"_id\": 2, \"_value\": \"#3ca2b4\", \"type\": \"general\"},\r\n            {\"name\": \"--third-color\",\"_id\": 3, \"_value\": \"#5cbc67\", \"type\": \"general\"},\r\n            {\"name\": \"userColor\",\"_id\": 4, \"_value\": \"#8442b1\", \"type\": \"item\", \"parts\": [4]}\r\n        ]\r\n        \r\n    }\r\n\r\n    // Dispatch para ejecutar las acciones\r\n    const [state, dispatch] = useReducer(PartReducer, initialState);\r\n\r\n\r\n\r\n    const updatePartsSelectedQuantity = (newQuantitySelected) => {\r\n        const {selected} = state.quantities;\r\n        let modifier = newQuantitySelected - selected;\r\n        updateIsReducible(modifier);\r\n        updateIsSummable(modifier);\r\n\r\n        dispatch({\r\n            type: UPDATE_PARTS_SELECTED_QUANTITY,\r\n            payload: newQuantitySelected\r\n        })\r\n    }\r\n\r\n    const updatePartsQuantities = (q) => {\r\n\r\n        dispatch({\r\n            type: UPDATE_PARTS_QUANTITIES,\r\n            payload: q\r\n        })\r\n    }\r\n\r\n    const updateIsSummable = (modifier) => {\r\n        const {max, selected} = state.quantities;\r\n        let selectedUpdated = selected + modifier;\r\n        let res = selectedUpdated < max ? true : false;\r\n\r\n        dispatch({\r\n            type: UPDATE_PARTS_IS_SUMMABLE,\r\n            payload: res\r\n        })\r\n    }\r\n\r\n    const updateIsReducible = (modifier) => {\r\n        const {min, selected} = state.quantities;\r\n        let selectedUpdated = selected + modifier;\r\n        let res = selectedUpdated > min ? true : false;\r\n\r\n        dispatch({\r\n            type: UPDATE_PARTS_IS_REDUCIBLE,\r\n            payload: res\r\n        })\r\n    }\r\n\r\n    const addPart = () => {\r\n        const {selected, isSummable, allowed} = state.quantities;\r\n        let positionPreviusQuantity = allowed.indexOf(selected);\r\n        if(positionPreviusQuantity === allowed.length) {\r\n            return null;\r\n        } \r\n        let nextQuantity = allowed[positionPreviusQuantity + 1];\r\n        if(isSummable) {\r\n            updatePartsSelectedQuantity(nextQuantity);\r\n        }\r\n    }\r\n\r\n    const removePart = () => {\r\n        const {selected, isReducible, allowed} = state.quantities;\r\n        let positionPreviusQuantity = allowed.indexOf(selected);\r\n        if(positionPreviusQuantity === 0) {\r\n            return null;\r\n        } \r\n        let nextQuantity = allowed[positionPreviusQuantity - 1];\r\n        if(isReducible) {\r\n            updatePartsSelectedQuantity(nextQuantity);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <PartContext.Provider\r\n            value={{\r\n                parts: state.quantities,\r\n                customColors: state.colors,\r\n                updatePartsSelectedQuantity,\r\n                updatePartsQuantities,\r\n                addPart,\r\n                removePart\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PartContext.Provider>\r\n    )\r\n}\r\n \r\nexport default PartState;","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\format\\formatState.jsx",["121"],"import React, {useReducer} from 'react';\r\nimport FormatContext from './formatContext';\r\nimport FormatReducer from './formatReducer';\r\nimport formatsJson from './formats.json';\r\n\r\nimport {   \r\n    UPDATE_SELECTED_FORMAT,\r\n    UPDATE_SELECTED_SUBFORMAT,\r\n    UPDATE_FORMAT_QUANTITIES,\r\n    CHANGE_DIMENSIONS\r\n} from '../../types';\r\n\r\nconst FormatState = props => {\r\n\r\n    let allFormats = formatsJson[0].data;\r\n\r\n    const initialState = {\r\n        \"selectedFormat\": {\r\n            \"name\": \"lines\",\r\n            \"selectedSubformat\": \"vertical\",\r\n            \"subformats\": [\"vertical\", \"horizontal\"],\r\n            \"dimensions\": {\r\n                \"item_1\": {\"_id\": 1, \"size\": 33.3333},\r\n                \"item_2\": {\"_id\": 2, \"size\": 33.3333},\r\n                \"item_3\": {\"_id\": 3, \"size\": 33.3333}\r\n            },\r\n            \"colores\": {\r\n                \"min\": 2,\r\n                \"max\": 8,\r\n                \"isSummable\": true,\r\n                \"isReducible\": true,\r\n                \"selected\": 2\r\n            },\r\n            \"parts\": {\r\n                \"min\": 2,\r\n                \"max\": 8,\r\n                \"isSummable\": true,\r\n                \"isReducible\": true,\r\n                \"selected\": 2,\r\n                \"isModifiable\": true\r\n            }\r\n        },   \r\n        formats: allFormats\r\n    }\r\n\r\n    // Dispatch para ejecutar las acciones\r\n    const [state, dispatch] = useReducer(FormatReducer, initialState);\r\n\r\n\r\n    const updateSelectedFormat = (newFormatSelected) => {\r\n        \r\n        dispatch({\r\n            type: UPDATE_SELECTED_FORMAT,\r\n            payload: newFormatSelected\r\n        })\r\n    }\r\n\r\n    const updatedSelectedSubformat = (e) => {\r\n        const newSubformatSelected = e.target.value;\r\n        console.log(\"Se modificó el Subformato\")\r\n        \r\n        dispatch({\r\n            type: UPDATE_SELECTED_SUBFORMAT,\r\n            payload: newSubformatSelected\r\n        })\r\n    }\r\n\r\n    const updateFormatQuantitiesSelected = (modifier) => {\r\n        console.log(\"Hasta acá\");\r\n        const selectedFormat = state.selectedFormat;\r\n        selectedFormat.parts.selected = selectedFormat.parts.selected + 1;\r\n        dispatch({\r\n            type: UPDATE_FORMAT_QUANTITIES,\r\n            payload: selectedFormat\r\n\r\n        })\r\n    }\r\n\r\n    const changeDimensions = (e) => {\r\n        const {value, id} = e.target;\r\n        console.log(id);\r\n        let dimensionSelected = Object.values(state.selectedFormat.dimensions).filter(dimension => dimension._id == id)[0];\r\n        dimensionSelected.size = value;\r\n        console.log(dimensionSelected);\r\n\r\n        dispatch({\r\n            type: CHANGE_DIMENSIONS,\r\n            payload: dimensionSelected\r\n        })\r\n    }\r\n\r\n\r\n    return ( \r\n        <FormatContext.Provider\r\n            value={{\r\n                formats: state.formats,\r\n                selectedFormat: state.selectedFormat,\r\n                selectedSubformat: state.selectedFormat.selectedSubformat,\r\n                updateSelectedFormat,\r\n                updatedSelectedSubformat,\r\n                updateFormatQuantitiesSelected,\r\n                changeDimensions\r\n            }}\r\n        >\r\n            {props.children}\r\n        </FormatContext.Provider>\r\n     );\r\n}\r\n \r\nexport default FormatState;","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\color\\colorState.jsx",["122","123","124","125","126","127","128"],"import React, {useReducer} from 'react';\r\nimport ColorContext from './colorContext';\r\nimport ColorReducer from './colorReducer';\r\nimport colorsJson from './colors.json';\r\n\r\nimport {   \r\n    ADD_COLOR,\r\n    REMOVE_COLOR,\r\n    UPDATE_SELECTED_COLOR,\r\n    UPDATE_IS_SUMMABLE,\r\n    UPDATE_COLORS_SELECTED_QUANTITY,\r\n    UPDATE_IS_REDUCIBLE,\r\n    UPDATE_COLOR_QUANTITIES,\r\n    UPDATE_ACTIVATED_COLORS,\r\n    UPDATE_CUSTOM\r\n} from '../../types';\r\n\r\nconst ColorState = props => {\r\n\r\n    // Set de valores iniciales\r\n    const initialState = {\r\n        colors: {\r\n            custom: false,\r\n            quantity: {\r\n                min: 2,\r\n                max: 8,\r\n                allowed: [2,3,4,5,6,7,8],\r\n                isSummable: false,\r\n                isReducible: true,\r\n                selected: 3\r\n            }, \r\n            colores: [\r\n                {\"name\": \"--first-color\", \"_id\": 1, \"_value\": \"#b57373\", \"active\": true},\r\n                {\"name\": \"--second-color\", \"_id\": 2, \"_value\": \"#3ca2b4\", \"active\": true}, \r\n                {\"name\": \"--third-color\", \"_id\": 3, \"_value\": \"#5cbc67\", \"active\": true},\r\n                {\"name\": \"--fourth-color\", \"_id\": 4, \"_value\": \"#ced930\", \"active\": false},\r\n                {\"name\": \"-fifth--color\", \"_id\": 5, \"_value\": \"#b14ca0\", \"active\": false},\r\n                {\"name\": \"--sixth-color\", \"_id\": 6, \"_value\": \"#000000\", \"active\": false},\r\n                {\"name\": \"--seveth-color\", \"_id\": 7, \"_value\": \"#c97a1f\", \"active\": false},\r\n                {\"name\": \"--eighth-color\", \"_id\": 8, \"_value\": \"#608574\", \"active\": false}\r\n            ]\r\n        }\r\n    }\r\n\r\n    // Dispatch para ejecutar las acciones\r\n    const [state, dispatch] = useReducer(ColorReducer, initialState);\r\n\r\n\r\n\r\n    const updateColor = (e) => {\r\n        const {value, id} = e.target;\r\n        const respuesta = Object.values(state.colors.colores).filter(color => color._id == id);\r\n        const resultado = respuesta[0];\r\n        resultado._value = value;\r\n\r\n        dispatch({\r\n            type: UPDATE_SELECTED_COLOR,\r\n            payload: resultado\r\n        })\r\n    }\r\n\r\n    const changeItemColor = (e) => {\r\n        Object.values(state.colors.colores).filter()\r\n    }\r\n\r\n    const addColor = (partsQuantitySelected) => {\r\n        const {selected, isSummable, allowed} = state.colors.quantity;\r\n        let positionPreviusQuantity = allowed.indexOf(selected);\r\n        if(positionPreviusQuantity === allowed.length) {\r\n            return null;\r\n        } \r\n        let newColorsQuantitySelected = allowed[positionPreviusQuantity + 1];\r\n        if(isSummable) {\r\n            updateColors(newColorsQuantitySelected, partsQuantitySelected)\r\n        }\r\n    }\r\n\r\n\r\n    const removeColor = (partsQuantitySelected) => {\r\n        const {selected, isReducible, allowed} = state.colors.quantity;\r\n        let positionPreviusQuantity = allowed.indexOf(selected);\r\n        if(positionPreviusQuantity === 0) {\r\n            return null;\r\n        } \r\n        let newColorsQuantitySelected = allowed[positionPreviusQuantity - 1];\r\n        if(isReducible) {\r\n            console.log(newColorsQuantitySelected, partsQuantitySelected);\r\n            updateColors(newColorsQuantitySelected, partsQuantitySelected);\r\n        }\r\n    }\r\n\r\n    const updateIsSummable = (modifier, partsQuantitySelected) => {\r\n        const {selected, isSummable, max} = state.colors.quantity;\r\n        let newColorsQuantitySelected = selected + modifier;\r\n        let resultado = newColorsQuantitySelected < max && newColorsQuantitySelected < partsQuantitySelected ? true : false;\r\n\r\n        dispatch({\r\n            type: UPDATE_IS_SUMMABLE,\r\n            payload: resultado\r\n        })\r\n    }\r\n\r\n    const updateIsReducible = (modifier, partsQuantitySelected) => {\r\n        const {selected, isReducible, min} = state.colors.quantity;\r\n        let newColorsQuantitySelected = selected + modifier;\r\n        let res = newColorsQuantitySelected > min && newColorsQuantitySelected <= partsQuantitySelected ? true : false;\r\n        \r\n        dispatch({\r\n            type: UPDATE_IS_REDUCIBLE,\r\n            payload: res\r\n        })\r\n    }\r\n\r\n    const updateColorsSelectedQuantity = (newQuantitySelected) => {\r\n        dispatch({\r\n            type: UPDATE_COLORS_SELECTED_QUANTITY,\r\n            payload: newQuantitySelected\r\n        })\r\n    }\r\n\r\n    const updateColorQuantities = (newQuantities) => {\r\n        updateActivatedColors(newQuantities.selected);\r\n\r\n        dispatch({\r\n            type: UPDATE_COLOR_QUANTITIES,\r\n            payload: newQuantities\r\n        })\r\n    }\r\n\r\n    const updateActivatedColors = (newQuantitySelected) => {\r\n        const res = Object.values(state.colors.colores).map(color => {\r\n            color._id > newQuantitySelected ? color.active = false : color.active = true;\r\n            return color\r\n        });\r\n\r\n        dispatch({\r\n            type: UPDATE_ACTIVATED_COLORS,\r\n            payload: res\r\n        })\r\n    }\r\n\r\n    const updateColors = (newColorsQuantitySelected, partsQuantitySelected) => {\r\n        updateActivatedColors(newColorsQuantitySelected);\r\n        let previusQuantitySelected = state.colors.quantity.selected;\r\n        let modifier = newColorsQuantitySelected - previusQuantitySelected;\r\n        updateIsReducible(modifier, partsQuantitySelected);\r\n        updateIsSummable(modifier, partsQuantitySelected);\r\n        updateColorsSelectedQuantity(modifier);\r\n    }\r\n\r\n    const updateCustom = () => {\r\n\r\n        dispatch({\r\n            type: UPDATE_CUSTOM\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <ColorContext.Provider\r\n            value={{\r\n                colors: state.colors,\r\n                updateColor,\r\n                updateColorsSelectedQuantity,\r\n                addColor,\r\n                removeColor,\r\n                updateColorQuantities,\r\n                updateActivatedColors,\r\n                updateColors,\r\n                updateIsReducible,\r\n                updateIsSummable,\r\n                updateCustom\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ColorContext.Provider>\r\n    )\r\n}\r\n \r\nexport default ColorState;","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\color\\colorContext.jsx",[],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\part\\partContext.jsx",[],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\format\\formatContext.jsx",[],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\part\\partReducer.jsx",["129","130","131"],"import {   \r\n    UPDATE_PARTS_SELECTED_QUANTITY, \r\n    UPDATE_PARTS_QUANTITIES,\r\n    UPDATE_PARTS_IS_SUMMABLE,\r\n    UPDATE_PARTS_IS_REDUCIBLE,\r\n    ADD_PART,\r\n    REMOVE_PART\r\n} from '../../types';\r\n\r\nexport default (state, action) => {\r\n    \r\n    switch(action.type) {\r\n\r\n        case UPDATE_PARTS_SELECTED_QUANTITY:\r\n            return {\r\n                ...state,\r\n                quantities: {\r\n                    ...state.quantities,\r\n                    selected: action.payload\r\n                }\r\n            }\r\n\r\n        case UPDATE_PARTS_QUANTITIES:\r\n            return {\r\n                ...state,\r\n                quantities: action.payload\r\n            }\r\n\r\n        case UPDATE_PARTS_IS_REDUCIBLE:\r\n            return {\r\n                ...state,\r\n                quantities: {\r\n                    ...state.quantities,\r\n                    isReducible: action.payload\r\n                }\r\n            }\r\n\r\n        case UPDATE_PARTS_IS_SUMMABLE:\r\n            return {\r\n                ...state,\r\n                quantities: {\r\n                    ...state.quantities,\r\n                    isSummable: action.payload\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\format\\formatReducer.jsx",["132"],"import {   \r\n    UPDATE_SELECTED_FORMAT,\r\n    UPDATE_SELECTED_SUBFORMAT,\r\n    UPDATE_FORMAT_QUANTITIES,\r\n    CHANGE_DIMENSIONS\r\n} from '../../types';\r\n\r\nexport default (state, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case UPDATE_SELECTED_FORMAT:\r\n            return {\r\n                ...state,\r\n                selectedFormat: action.payload\r\n            }  \r\n\r\n        case UPDATE_SELECTED_SUBFORMAT:\r\n            return {\r\n                ...state,\r\n                selectedFormat: {\r\n                    ...state.selectedFormat,\r\n                    selectedSubformat: action.payload\r\n                }\r\n            }\r\n\r\n        case UPDATE_FORMAT_QUANTITIES:\r\n            return {\r\n                ...state,\r\n                selectedFormat: action.payload,\r\n                formats: Object.values(state.formats).map(format => format.name === action.payload.name ? action.payload : format)\r\n            }\r\n\r\n        case CHANGE_DIMENSIONS:\r\n            return {\r\n                ...state,\r\n                selectedFormat: {\r\n                    ...state.selectedFormat,\r\n                    dimensions: Object.values(state.selectedFormat.dimensions).map(dimension => dimension._id === action.payload.id ? action.payload : dimension)\r\n                }\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\color\\colorReducer.jsx",["133","134","135","136"],"import {   \r\n    ADD_COLOR,\r\n    REMOVE_COLOR,\r\n    UPDATE_SELECTED_COLOR,\r\n    UPDATE_QUANTITY,\r\n    UPDATE_IS_SUMMABLE,\r\n    UPDATE_COLORS_SELECTED_QUANTITY,\r\n    UPDATE_IS_REDUCIBLE,\r\n    UPDATE_COLOR_QUANTITIES,\r\n    UPDATE_ACTIVATED_COLORS,\r\n    UPDATE_CUSTOM\r\n} from '../../types';\r\n\r\nexport default (state, action) => {\r\n    \r\n    switch(action.type) {\r\n\r\n        case UPDATE_SELECTED_COLOR:\r\n            return {\r\n                ...state,\r\n                colors: {\r\n                    ...state.colors,\r\n                    colores: state.colors.colores.map(color => color._id === action.payload._id  ? action.payload : color)\r\n                }\r\n            }\r\n\r\n        case UPDATE_IS_SUMMABLE:\r\n            return {\r\n                ...state,\r\n                colors: {\r\n                    ...state.colors,\r\n                    quantity: {\r\n                        ...state.colors.quantity,\r\n                        isSummable: action.payload\r\n                    }\r\n                }\r\n            }\r\n\r\n        case UPDATE_IS_REDUCIBLE:\r\n            return {\r\n                ...state,\r\n                colors: {\r\n                    ...state.colors,\r\n                    quantity: {\r\n                        ...state.colors.quantity,\r\n                        isReducible: action.payload\r\n                    }\r\n                }\r\n            }\r\n\r\n        case UPDATE_COLORS_SELECTED_QUANTITY:\r\n            return {\r\n                ...state,\r\n                colors: {\r\n                    ...state.colors,\r\n                    quantity: {\r\n                        ...state.colors.quantity,\r\n                        selected: state.colors.quantity.selected + action.payload\r\n                    }\r\n                }\r\n            }\r\n\r\n        case UPDATE_COLOR_QUANTITIES:\r\n            return {\r\n                ...state,\r\n                colors: {\r\n                    ...state.colors,\r\n                    quantity: action.payload\r\n                }\r\n            }\r\n\r\n        case UPDATE_ACTIVATED_COLORS:\r\n            return {\r\n                ...state,\r\n                colors: {\r\n                    ...state.colors,\r\n                    colores: action.payload\r\n                }\r\n            }\r\n\r\n        case UPDATE_CUSTOM:\r\n            return {\r\n                ...state,\r\n                colors: {\r\n                    ...state.colors,\r\n                    custom: state.colors.custom === true ? false : true\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\types\\index.jsx",[],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\test\\test.jsx",[],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\components\\sidebar.jsx",["137","138","139"],"import React, {useState, useContext} from 'react';\r\nimport ColorContext from '../context/color/colorContext';\r\nimport PartContext from '../context/part/partContext';\r\nimport FormatContext from '../context/format/formatContext';\r\nimport '../create-flag.scss'; \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faPlus,\r\n    faMinus,\r\n    faAngleLeft as faOcultar,\r\n    faCircle\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { \r\n  faCircle as farCircle,\r\n  faWindowClose as faClose,\r\n  faCheckCircle as farCheckCircle,\r\n} from '@fortawesome/free-regular-svg-icons';\r\n\r\nconst Sidebar = () => {\r\n\r\n    const colorContext = useContext(ColorContext);\r\n    const {\r\n        colors, \r\n        updateColor, \r\n        addColor, \r\n        removeColor, \r\n        updateColorQuantities, \r\n        updateColorsSelectedQuantity,\r\n        updateColors, \r\n        updateIsReducible, \r\n        updateIsSummable, \r\n        updateActivatedColors,\r\n        updateCustom\r\n    } = colorContext; \r\n\r\n    const partContext = useContext(PartContext);\r\n    const {\r\n        parts, \r\n        customColors,\r\n        updatePartsSelectedQuantity, \r\n        updatePartsQuantities, \r\n        addPart, \r\n        removePart\r\n    } = partContext;\r\n\r\n    const formatContext = useContext(FormatContext);\r\n    const {\r\n        formats, \r\n        selectedFormat, \r\n        selectedSubformat, \r\n        updateSelectedFormat, \r\n        updatedSelectedSubformat,\r\n        updateFormatQuantitiesSelected,\r\n        changeDimensions\r\n    } = formatContext;\r\n\r\n\r\n    const [menuColapsado, setMenuColapsado] = useState(false);\r\n    const [aspectRatio, setAspectRatio] = useState('5:8');\r\n\r\n\r\n    const aspectRatios = [\r\n        '1:1', '28:37', '2:3', '5:8', '3:5', '1:2'\r\n    ];\r\n\r\n    const calcularDimensiones = aspect => {\r\n        let split = aspect.split(\":\", 2);\r\n        let height = split[0];\r\n        let width = split[1];\r\n        let result = width/height;\r\n        return result;\r\n    }\r\n\r\n    const cambiarAspectRatio = (e) => {\r\n        const {value} = e.target;\r\n        setAspectRatio(value);\r\n        calcularDimensiones(aspectRatio);\r\n    }\r\n\r\n    const changeFormat = (e) => {\r\n        const newFormatChosen = e.target.value;\r\n        const newFormatSelected = Object.values(formats).filter(formato => formato.name === newFormatChosen && formato)[0];\r\n        updateSelectedFormat(newFormatSelected);\r\n        const {colores, parts} = newFormatSelected;\r\n        updatePartsQuantities(parts);\r\n        updateColorQuantities(colores);\r\n        console.log(colores);\r\n    }\r\n\r\n    const cambiarCantidad = (e) => {\r\n        let newQuantitySelected = Number(e.target.value);\r\n        updatePartsSelectedQuantity(newQuantitySelected);\r\n        updateColors(newQuantitySelected);\r\n        updateFormatQuantitiesSelected(newQuantitySelected);\r\n    }\r\n\r\n    const obtenerCantidad = () => {\r\n        const {min, max} = parts;\r\n        let cantidades = [];\r\n        for(let i = min; i <= max; i++) {\r\n            cantidades.push(i);\r\n        }\r\n        if(formats.name === 'squares') {\r\n            cantidades = [4, 16, 64];\r\n        }\r\n\r\n        return cantidades;\r\n    }\r\n\r\n    const addElement = () => {\r\n        let modifier = 1;\r\n        updateIsSummable(modifier, parts.selected + modifier);\r\n        updateIsReducible(modifier, parts.selected + modifier);\r\n        // updateColorsSelectedQuantity(modifier);\r\n        // updateActivatedColors(colors.quantity.selected + modifier);\r\n        addPart();\r\n        // updateFormatQuantitiesSelected(modifier);\r\n    }\r\n\r\n    const removeElement = () => {\r\n        let modifier = -1;\r\n        updateIsSummable(modifier, parts.selected + modifier);\r\n        updateIsReducible(modifier, parts.selected + modifier);\r\n        updateColorsSelectedQuantity(modifier);\r\n        updateActivatedColors(colors.quantity.selected + modifier);\r\n        removePart();\r\n        // updateFormatQuantitiesSelected(modifier);\r\n    }\r\n\r\n    const addNewColor = () => {\r\n        const partsQuantitySelected = parts.selected;\r\n        addColor(partsQuantitySelected);\r\n    }\r\n\r\n    const removeNewColor = () => {\r\n        const partsQuantitySelected = parts.selected;\r\n        removeColor(partsQuantitySelected);\r\n    }\r\n\r\n    const ocultarMenu = () => {\r\n        if(menuColapsado) {\r\n            setMenuColapsado(false);\r\n        } else {\r\n            setMenuColapsado(true);\r\n        }\r\n    }\r\n\r\n    const submitFormulario = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return ( \r\n\r\n        <div className={`side-bar ${menuColapsado ? 'colapsed' : 'not-colapsed'}`}>\r\n\r\n\r\n                    <FontAwesomeIcon \r\n                        className={`btn-ocultar-menu ${menuColapsado ? 'mostrar' : 'ocultar'}`}\r\n                        icon={\r\n                            faOcultar\r\n                        }\r\n                        onClick={ocultarMenu}\r\n                    />\r\n                    <form className=\"menu\"\r\n                        onSubmit={submitFormulario}\r\n                    >\r\n\r\n                        <div className=\"form-group\">\r\n                            <h4>Formato: </h4>\r\n                            <select \r\n                                name=\"formatos\" \r\n                                id=\"formatos\"\r\n                                onChange={changeFormat}\r\n                                value={selectedFormat.name}\r\n                            >\r\n                                {Object.keys(formats).map((formato) => (\r\n                                    <option \r\n                                        value={formato.name}\r\n                                        key={formato._id}\r\n                                    >\r\n                                    {formato}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <h4>Subformato: </h4>\r\n                            <select \r\n                                name=\"subformatos\" \r\n                                id=\"subformatos\"\r\n                                onChange={updatedSelectedSubformat}\r\n                                value={selectedSubformat}\r\n                            >\r\n                                {Object.values(selectedFormat.subformats).map((subFormat) => (\r\n                                    <option \r\n                                        value={subFormat}\r\n                                        key={subFormat}\r\n                                    >\r\n                                    {subFormat}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        {selectedFormat.name === \"circle\" || selectedFormat.name === \"lines\" ? \r\n                            <div className=\"form-group form-dimensions\">\r\n                                <div className=\"form-titulo\">\r\n                                    <h4>Dimensiones: </h4>\r\n                                </div>\r\n\r\n                                <div className=\"form-content\">\r\n                                    {Object.values(selectedFormat.dimensions).map(dimension => (\r\n                                        <input \r\n                                            type=\"number\"\r\n                                            onChange={changeDimensions}\r\n                                            min=\"3\" \r\n                                            max=\"80\"\r\n                                            value={dimension.size}\r\n                                            id={dimension._id}\r\n                                        />\r\n                                    ))}\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        : null    \r\n                        }\r\n                        \r\n                        <div className=\"form-group form-colores\">\r\n\r\n                            <div className=\"form-titulo\">\r\n                                <h4>Colores: </h4>\r\n                            </div>\r\n\r\n                            <div className=\"form-content\">\r\n                                <div className=\"colores\">\r\n                                    {Object.values(colors.colores).map((color) => (\r\n                                        color.active ?\r\n                                            <input \r\n                                            className=\"new-color\" \r\n                                            type=\"color\" \r\n                                            name={color._id}\r\n                                            value={color._value}\r\n                                            onChange={updateColor}\r\n                                            id={color._id}\r\n                                            key={color._id}\r\n                                        /> \r\n                                        : null\r\n                                    ))}\r\n                                </div>\r\n                                \r\n                                <div className=\"botones\">\r\n                                    <FontAwesomeIcon \r\n                                        className={`icon ${colors.quantity.isSummable ? 'active' : 'inactive'}`}\r\n                                        icon={\r\n                                            faPlus\r\n                                        }\r\n                                        onClick={addNewColor}\r\n                                    />\r\n                                \r\n                                    <FontAwesomeIcon \r\n                                        className={`icon ${colors.quantity.isReducible ? 'active' : 'inactive'}`}\r\n                                        icon={\r\n                                            faMinus\r\n                                        }\r\n                                        onClick={removeNewColor}\r\n                                    />\r\n                                    \r\n                                </div>\r\n\r\n                                \r\n                            </div>\r\n\r\n                            <div className=\"custon-wrapper\">\r\n                                <p>Personalizado: </p>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    name=\"custom\" \r\n                                    id=\"custom\"\r\n                                    value=\"false\"\r\n                                    onClick={updateCustom}\r\n                                />\r\n                                <label htmlFor=\"custom\">\r\n                                    <FontAwesomeIcon \r\n                                    icon={\r\n                                        colors.custom ? farCheckCircle :  farCircle\r\n                                    }\r\n                                    className=\"icon\"\r\n                                    />\r\n                                </label>    \r\n                            </div>\r\n                            \r\n                        \r\n                        </div>\r\n\r\n                        {parts.isModifiable ? \r\n                            <div className=\"form-group form-cantidad\">\r\n                                <div className=\"form-titulo\">\r\n                                    <h4>Partes: </h4>\r\n                                </div>\r\n\r\n                                <div className=\"form-content\">\r\n\r\n                                    <select \r\n                                        name=\"cantidad\" \r\n                                        id=\"cantidad\"\r\n                                        value={parts.selected}\r\n                                        onChange={cambiarCantidad}\r\n                                    >\r\n\r\n                                        {obtenerCantidad().map((cant) => (\r\n                                            <option \r\n                                                value={cant}\r\n                                                key={cant}\r\n                                            >\r\n                                            {cant}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <div className=\"botones\">\r\n                                        <FontAwesomeIcon \r\n                                            className={`icon ${parts.isSummable ? 'active' : 'inactive'}`}\r\n                                            icon={\r\n                                                faPlus\r\n                                            }\r\n                                            onClick={addElement}\r\n                                        />\r\n                                    \r\n                                        <FontAwesomeIcon \r\n                                            className={`icon ${parts.isReducible ? 'active' : 'inactive'}`}\r\n                                            icon={\r\n                                                faMinus\r\n                                            }\r\n                                            onClick={removeElement}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        : null    \r\n                        }\r\n\r\n                        <div className=\"form-group form-aspect-ratio\">\r\n                            <h4>Aspect Ratio: </h4>\r\n                            <div className=\"options\">\r\n                                {aspectRatios.map(item => (\r\n                                    <div className=\"option\">\r\n                                        <input \r\n                                            type=\"radio\" \r\n                                            name=\"aspect-ratio\" \r\n                                            id={item}\r\n                                            value={item}\r\n                                            onClick={cambiarAspectRatio}\r\n                                            key={item}\r\n                                        />\r\n                                        <label htmlFor={item}>{item}</label>\r\n                                    </div>\r\n                                ))}\r\n                                \r\n                            </div>  \r\n                            \r\n                            \r\n                       \r\n                        </div>\r\n                    </form>\r\n                    \r\n                </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Sidebar;","C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\components\\flag.jsx",["140","141","142","143"],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\components\\modal.jsx",["144"],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\modal\\modalContext.jsx",[],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\modal\\modalState.jsx",[],"C:\\Users\\falberio\\Desktop\\www\\Pruebas\\Animaciones\\Spinners\\tutexto\\src\\pages\\create-flag\\context\\modal\\modalReducer.jsx",["145"],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":26,"nodeType":"152","messageId":"153","endLine":1,"endColumn":34},{"ruleId":"150","severity":1,"message":"154","line":17,"column":25,"nodeType":"152","messageId":"153","endLine":17,"endColumn":35},{"ruleId":"150","severity":1,"message":"155","line":30,"column":7,"nodeType":"152","messageId":"153","endLine":30,"endColumn":12},{"ruleId":"150","severity":1,"message":"156","line":1,"column":48,"nodeType":"152","messageId":"153","endLine":1,"endColumn":54},{"ruleId":"150","severity":1,"message":"157","line":24,"column":12,"nodeType":"152","messageId":"153","endLine":24,"endColumn":17},{"ruleId":"150","severity":1,"message":"158","line":24,"column":19,"nodeType":"152","messageId":"153","endLine":24,"endColumn":27},{"ruleId":"150","severity":1,"message":"159","line":32,"column":25,"nodeType":"152","messageId":"153","endLine":32,"endColumn":39},{"ruleId":"160","severity":1,"message":"161","line":85,"column":49,"nodeType":"162","messageId":"163","endLine":85,"endColumn":60,"fix":"164"},{"ruleId":"150","severity":1,"message":"165","line":137,"column":17,"nodeType":"152","messageId":"153","endLine":137,"endColumn":21},{"ruleId":"150","severity":1,"message":"166","line":10,"column":5,"nodeType":"152","messageId":"153","endLine":10,"endColumn":13},{"ruleId":"150","severity":1,"message":"167","line":11,"column":5,"nodeType":"152","messageId":"153","endLine":11,"endColumn":16},{"ruleId":"168","severity":1,"message":"169","line":82,"column":114,"nodeType":"170","messageId":"171","endLine":82,"endColumn":116},{"ruleId":"150","severity":1,"message":"172","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":18},{"ruleId":"150","severity":1,"message":"173","line":7,"column":5,"nodeType":"152","messageId":"153","endLine":7,"endColumn":14},{"ruleId":"150","severity":1,"message":"174","line":8,"column":5,"nodeType":"152","messageId":"153","endLine":8,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":52,"column":89,"nodeType":"170","messageId":"171","endLine":52,"endColumn":91},{"ruleId":"150","severity":1,"message":"175","line":62,"column":11,"nodeType":"152","messageId":"153","endLine":62,"endColumn":26},{"ruleId":"150","severity":1,"message":"176","line":93,"column":26,"nodeType":"152","messageId":"153","endLine":93,"endColumn":36},{"ruleId":"150","severity":1,"message":"177","line":104,"column":26,"nodeType":"152","messageId":"153","endLine":104,"endColumn":37},{"ruleId":"150","severity":1,"message":"166","line":6,"column":5,"nodeType":"152","messageId":"153","endLine":6,"endColumn":13},{"ruleId":"150","severity":1,"message":"167","line":7,"column":5,"nodeType":"152","messageId":"153","endLine":7,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":10,"column":1,"nodeType":"180","endLine":50,"endColumn":2},{"ruleId":"178","severity":1,"message":"179","line":8,"column":1,"nodeType":"180","endLine":48,"endColumn":2},{"ruleId":"150","severity":1,"message":"173","line":2,"column":5,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"174","line":3,"column":5,"nodeType":"152","messageId":"153","endLine":3,"endColumn":17},{"ruleId":"150","severity":1,"message":"181","line":5,"column":5,"nodeType":"152","messageId":"153","endLine":5,"endColumn":20},{"ruleId":"178","severity":1,"message":"179","line":14,"column":1,"nodeType":"180","endLine":93,"endColumn":2},{"ruleId":"150","severity":1,"message":"182","line":11,"column":5,"nodeType":"152","messageId":"153","endLine":11,"endColumn":13},{"ruleId":"150","severity":1,"message":"183","line":15,"column":20,"nodeType":"152","messageId":"153","endLine":15,"endColumn":27},{"ruleId":"150","severity":1,"message":"184","line":39,"column":9,"nodeType":"152","messageId":"153","endLine":39,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":1,"column":28,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"184","line":9,"column":19,"nodeType":"152","messageId":"153","endLine":9,"endColumn":31},{"ruleId":"150","severity":1,"message":"157","line":15,"column":12,"nodeType":"152","messageId":"153","endLine":15,"endColumn":17},{"ruleId":"150","severity":1,"message":"185","line":28,"column":15,"nodeType":"152","messageId":"153","endLine":28,"endColumn":28},{"ruleId":"150","severity":1,"message":"151","line":1,"column":16,"nodeType":"152","messageId":"153","endLine":1,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":6,"column":1,"nodeType":"180","endLine":26,"endColumn":2},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'farArrowUp' is defined but never used.","'letra' is assigned a value but never used.","'useRef' is defined but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'setAspectRatio' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property 0.","MemberExpression","unexpectedWhitespace",{"range":"188","text":"189"},"'size' is assigned a value but never used.","'ADD_PART' is defined but never used.","'REMOVE_PART' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'colorsJson' is defined but never used.","'ADD_COLOR' is defined but never used.","'REMOVE_COLOR' is defined but never used.","'changeItemColor' is assigned a value but never used.","'isSummable' is assigned a value but never used.","'isReducible' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'UPDATE_QUANTITY' is defined but never used.","'faCircle' is defined but never used.","'faClose' is defined but never used.","'customColors' is assigned a value but never used.","'partsSelected' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2954,2955],""]